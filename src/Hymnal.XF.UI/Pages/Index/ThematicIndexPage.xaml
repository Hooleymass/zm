<?xml version="1.0" encoding="UTF-8" ?>
<mvxViews:MvxContentPage
    x:Class="Hymnal.XF.UI.Pages.ThematicIndexPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:iOS="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:mvxViews="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
    xmlns:viewModels="clr-namespace:Hymnal.Core.ViewModels;assembly=Hymnal.Core"
    x:TypeArguments="viewModels:ThematicIndexViewModel"
    BackgroundColor="{DynamicResource PrimaryBackgroudColor}">


    <RelativeLayout>
        <Image
            Aspect="AspectFill"
            AutomationProperties.IsInAccessibleTree="False"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                   Property=Height}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                  Property=Width}"
            Source="{DynamicResource BackgroundImageFile}" />

        <StackLayout
            BackgroundColor="{DynamicResource SecondaryBackgroudColor}"
            Opacity="{DynamicResource BackgroundWhiteFilter}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                   Property=Height}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                  Property=Width}" />

        <ListView
            BackgroundColor="Transparent"
            Footer=""
            ItemsSource="{Binding Thematics}"
            RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                   Property=Height}"
            RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                  Property=Width}"
            SelectedItem="{Binding SelectedThematic, Mode=TwoWay}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextCell
                        Text="{Binding ThematicName}"
                        TextColor="{DynamicResource PrimaryTextColor}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

    </RelativeLayout>

</mvxViews:MvxContentPage>
